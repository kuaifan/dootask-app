// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven {
            url 'https://maven.google.com/'
        }
        maven {
            url 'https://developer.huawei.com/repo/'
        }
        maven() {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://jitpack.io'
        }
    }
    dependencies {
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'com.huawei.agconnect:agcp:1.6.0.300'
        classpath 'com.taobao.android:weexplugin-gradle-plugin:1.3'
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven {
            url 'https://maven.google.com/'
        }
        maven() {
            url 'http://oss.jfrog.org/oss-snapshot-local/'
        }
        maven() {
            url 'https://developer.huawei.com/repo/'
        }
        maven() {
            url 'https://maven.aliyun.com/repository/public/'
        }
        maven {
            url 'https://jitpack.io'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    buildscript {
        dependencies {
            classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
            classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        }
        repositories {
            mavenCentral()
            jcenter()
            google()
            maven {
                url "https://repo.grails.org/grails/core/"
            }
        }
    }
}

ext {
    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localProperties.load(new FileInputStream(localPropertiesFile))
    }

    applicationId = "com.dootask.task"

    versionCode = localProperties.getProperty('versionCode') ? localProperties.getProperty('versionCode').toInteger() : 1
    versionName = localProperties.getProperty('versionName') ?: "0.0.1"

    eeuiVersionCode = 66
    eeuiVersionName = "2.5.1"

    minSdkVersion = 21
    appMinSdkVersion = 21
    compileSdkVersion = 33
    supportLibVersion = "28.0.0"
    targetSdkVersion = 36
    googleGsonVersion = "2.8.5"

    appcompatVersion = "1.1.0"
    coreVersion = "1.2.0"
    constraintlayoutVersion = "1.1.3"
    materialVersion = "1.1.0"
    multidexVersion = "2.0.1"
    recyclerviewVersion = "1.1.0"
    supportv4Version = "1.0.0"

    fastjsonLibVersion = "1.2.58"
    weex_loaderVersion = "1.3"
    weex_processorVersion = "1.3"
    weex_sdkLibVersion = "0.28.0"

    disableCov = project.hasProperty("disableCov") && project.property('disableCov') == "true"
    useApachePackageName = project.hasProperty('apachePackageName') ? project.property('apachePackageName').toBoolean() : false
    unbundlingJSC = project.hasProperty('unbundlingJSC') ? project.property('unbundlingJSC').toBoolean() : false
    artifactName = project.hasProperty('artifactName') ? project.property('artifactName') : 'weex_sdk'
    groupId = project.hasProperty('groupId') ? project.property('groupId') : 'com.taobao.android'
    weexVersion = project.hasProperty('weexVersion') ? project.getProperty('weexVersion') : '0.30.0'
    implementFromWeex = true
}
